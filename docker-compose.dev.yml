version: '3'

services:
  pgadmin:
      container_name: pgadmin
      image: dpage/pgadmin4
      environment:
        PGADMIN_DEFAULT_EMAIL: admin@admin.com
        PGADMIN_DEFAULT_PASSWORD: admin
        PGADMIN_CONFIG_SERVER_MODE: 'False'
      volumes:
        - pgadmin-data:/var/lib/pgadmin
      ports:
        - "8081:80"
      restart: unless-stopped
  shorturl:
    build:
        dockerfile: Dockerfile
        context: ./shorturl
        target: dev
    volumes:
      - ./shorturl:/app
    command: reflex -r '(\.go$$)' --decoration=fancy -s go run /app/main.go
  qrgen:
    build:
        dockerfile: Dockerfile
        context: ./qrgen
        target: dev
    volumes:
      - ./qrgen:/app
    command: reflex -r '(\.go$$)' --decoration=fancy -s go run /app/main.go
  etl:
    build:
        dockerfile: Dockerfile
        context: ./off-etl
        target: dev
    volumes:
      - ./off-etl:/app
    command: reflex -r '(\.go$$)' --decoration=fancy -s go run /app/main.go
  orders:
    build:
        dockerfile: Dockerfile
        context: ./off-orders
        target: dev
    volumes:
      - ./off-orders:/app
    command: reflex -r '(\.go$$)' --decoration=fancy -s go run /app/main.go
  users:
    build:
        dockerfile: Dockerfile
        context: ./off-users
        target: dev
    volumes:
      - ./off-users:/app
    command: reflex -r '(\.go$$)' --decoration=fancy -s go run /app/main.go
  notifications:
    build:
        dockerfile: Dockerfile
        context: ./off-notifications
        target: dev
    volumes:
      - ./off-notifications:/app
    command: reflex -r '(\.go$$)' --decoration=fancy -s go run /app/main.go
  generator:
    build:
        dockerfile: Dockerfile
        context: ./off-generator
        target: dev
    volumes:
      - ./off-generator:/app
    command: reflex -r '(\.go$$)' --decoration=fancy -s go run /app/main.go
volumes:
  pgadmin-data: