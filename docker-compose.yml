version: '3'

services:

  redis:
    image: redis:7
    container_name: redis
    hostname: redis
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    command: redis-server
    restart: always

  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - /usr/local/pgsql:/usr/local/pgsql
      - ./off-project/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    restart: always

  nats:
    container_name: nats
    hostname: nats
    image: nats
    ports:
      - "${NATS_PORT}:${NATS_PORT}"

  shorturl:
    container_name: shorturl
    hostname: shorturl
    depends_on:
      - redis
    build:
      dockerfile: Dockerfile
      context: ./shorturl
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      APP_PORT: ${SHORTURL_PORT}
      QRGEN_GRPC_SERVER: ${QRGEN_SERVICE}
      QRGEN_GRPC_SERVER_PORT: ${QRGEN_GRPC_SERVER_PORT}
    ports:
      - ${SHORTURL_PORT}:${SHORTURL_PORT}
    volumes:
      - ./shorturl:/app
    restart: always

  qrgen:
    container_name: qrgen
    hostname: qrgen
    build:
      dockerfile: Dockerfile
      context: ./qrgen
    environment:
      APP_PORT: ${QRGEN_PORT}
      GRPC_SERVER_PORT: ${QRGEN_GRPC_SERVER_PORT}
    ports:
      - ${QRGEN_PORT}:${QRGEN_PORT}
    volumes:
      - ./qrgen:/app
    restart: always

  etl:
    container_name: etl
    hostname: etl
    build:
      dockerfile: Dockerfile
      context: ./off-project/off-etl
    depends_on:
      - postgres
    environment:
      DB_HOST: ${DB_HOST}
      DB_DRIVER: ${DB_DRIVER}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      SSL_MODE: ${SSL_MODE}
      ETL_MAX_RUNS: ${ETL_MAX_RUNS}
      ETL_RUN_PERIOD: ${ETL_RUN_PERIOD}
    ports:
      - ${ETL_PORT}:${ETL_PORT}
    volumes:
      - ./off-project/off-etl:/app
    restart: always

  orders:
    container_name: orders
    hostname: orders
    build:
      dockerfile: Dockerfile
      context: ./off-project/off-orders-service
    depends_on:
      - postgres
    environment:
      DB_HOST: ${DB_HOST}
      DB_DRIVER: ${DB_DRIVER}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      SSL_MODE: ${SSL_MODE}
      APP_PORT: ${ORDERS_SERVICE_PORT}
      NATS_HOST: ${NATS_HOST}
      NATS_PORT: ${NATS_PORT}
    ports:
      - ${ORDERS_SERVICE_PORT}:${ORDERS_SERVICE_PORT}
    volumes:
      - ./off-project/off-orders-service:/app
    restart: always

  users:
    container_name: users
    hostname: users
    build:
      dockerfile: Dockerfile
      context: ./off-project/off-users-service
    depends_on:
      - postgres
    environment:
      DB_HOST: ${DB_HOST}
      DB_DRIVER: ${DB_DRIVER}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      SSL_MODE: ${SSL_MODE}
      APP_PORT: ${USERS_SERVICE_PORT}
      NATS_HOST: ${NATS_HOST}
      NATS_PORT: ${NATS_PORT}
    ports:
      - ${USERS_SERVICE_PORT}:${USERS_SERVICE_PORT}
    volumes:
      - ./off-project/off-users-service:/app
    restart: always

  notifications:
    container_name: notifications
    hostname: notifications
    build:
      dockerfile: Dockerfile
      context: ./off-project/off-notifications-service
    depends_on:
      - nats
    environment:
      NATS_HOST: ${NATS_HOST}
      NATS_PORT: ${NATS_PORT}
    ports:
      - ${NOTIFICATIONS_SERVICE_PORT}:${NOTIFICATIONS_SERVICE_PORT}
    volumes:
      - ./off-project/off-notifications-service:/app
    restart: always

  generator:
    container_name: generator
    hostname: generator
    build:
      dockerfile: Dockerfile
      context: ./off-project/off-generator
    depends_on:
      - orders
      - users
    environment:
      USERS_SERVICE: ${USERS_SERVICE}
      USERS_SERVICE_PORT: ${USERS_SERVICE_PORT}
      ORDERS_SERVICE: ${ORDERS_SERVICE}
      ORDERS_SERVICE_PORT: ${ORDERS_SERVICE_PORT}
      GENERATOR_RUN_PERIOD: ${GENERATOR_RUN_PERIOD}
      NATS_HOST: ${NATS_HOST}
      NATS_PORT: ${NATS_PORT}
    ports:
      - ${GENERATOR_PORT}:${GENERATOR_PORT}
    volumes:
      - ./off-project/off-generator:/app
    restart: always